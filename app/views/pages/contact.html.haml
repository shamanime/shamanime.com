- content_for :viewjs do
  :javascript
    $(document).ready(function() {
      var validator = $("#new_contact").validate({
        errorClass: "help-inline",
        errorElement: "span",
        rules: {
          "contact[name]":  {
                              required: true,
                              minlength: 4
                            },
          "contact[email]": {
                              required: true,
                              email: true
                            },
          "contact[message]": {
                                required: true,
                                minlength: 20
                              }
        },
        highlight: function(element, errorClass, validClass) {
           $(element).addClass(errorClass).removeClass(validClass);
           $(element).parents('div.clearfix:first').addClass('error');
        },
        unhighlight: function(element, errorClass, validClass) {
           $(element).removeClass(errorClass).addClass(validClass);
           $(element).parents('div.clearfix:first').removeClass('error');
        },
        submitHandler: function(form) {
          $('#note-error, #note-ok').empty();
          $('#new_contact').fadeOut();
          $('#load').append("<img src='#{asset_path 'ajax-loader.gif'}' alt='Loading...' id='loading'>").fadeIn();
          $(form).ajaxSubmit();
        }
      });
    });
  
.page.left
  %h1.title= t 'pages.contact.title'
  #note-ok{:style => "display:none"}
  #note-error{:style => "display:none"}
  #contact-form
    = form_for @contact, :url => { :controller => :contact, :action => :contact }, :remote => true, :html => { :class => "form-stacked" } do |f|
      .clearfix
        = f.label :name
        .input= f.text_field :name, :class => "xlarge"
      .clearfix
        = f.label :email
        .input= f.text_field :email, :class => "xlarge"
      .clearfix
        = f.label :message
        .input
          = f.text_area :message, :rows => 6, :class => "xlarge"
          %span.help-block Note: All fields are required.
      .actions= f.submit t('pages.contact.send_button'), :id => 'submit-button', :name => 'submit', :class => "btn primary"
  #load